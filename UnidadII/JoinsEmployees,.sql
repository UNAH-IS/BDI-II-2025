SELECT EMPLOYEE_ID, 
       FIRST_NAME, 
       LAST_NAME, 
       SALARY, 
       DEPARTMENT_ID
FROM EMPLOYEES
WHERE SALARY BETWEEN 5000 AND  6500
AND DEPARTMENT_ID = 20;

-- && ==> AND
-- || ==> OR
-- ! ==> NOT


SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID NOT IN (101,102,103,104);


SELECT  EMPLOYEE_ID,
        FIRST_NAME, 
        TO_CHAR(HIRE_DATE, 'DD-MM-YYYY')  --DATE
FROM EMPLOYEES
where EMPLOYEE_ID = 999;



SELECT  EMPLOYEE_ID,
        FIRST_NAME, 
        TO_CHAR(HIRE_DATE, 'YYYY')  --DATE
FROM EMPLOYEES
where EMPLOYEE_ID = 999;

INSERT INTO EMPLOYEES (
    --EMPLOYEE_ID, 
    FIRST_NAME, 
    LAST_NAME, 
    SALARY, 
    DEPARTMENT_ID,
    HIRE_DATE,
    JOB_ID,
    MANAGER_ID,
    COMMISSION_PCT,
    PHONE_NUMBER,
    EMAIL
)
VALUES (
    --SEQ_EMPLOYEES.nextval, 
    'John', 
    'Doe', 
    6000, 
    20, 
    TO_DATE('30/06/2025', 'DD/MM/YYYY'), 
    'IT_PROG', 
    101, 
    NULL, 
    '123-456-7890',
    'AAAAAaA'
);



SELECT TO_CHAR(SYSDATE, 'DD-MM-YYYY HH24:MI:SS') AS CURRENT_DATE_TIME
FROM DUAL;

SELECT 5 * 10 AS MULTIPLICATION_RESULT
FROM DUAL;


SELECT  FIRST_NAME,
        5 + 10 AS SUMA, --COLUMNA VIRTUAL
        'HOLA' AS MENSAJE,
        SYSDATE AS FECHA_ACTUAL,
        SALARY,
        SALARY,
        SALARY,
        SALARY * 0.05 AS BONUS
FROM EMPLOYEES;

SELECT TO_CHAR(sysdate, 'DDD') AS DIA_ACTUAL,
        TO_DATE('25-12-2023', 'DD-MM-YYYY') AS NAVIDAD,
        TO_CHAR(TO_DATE('25-12-2023', 'DD-MM-YYYY'), 'DDD') AS DIA_NAVIDAD,
        TO_CHAR(TO_DATE('25-12-2023', 'DD-MM-YYYY'), 'DDD') - TO_CHAR(sysdate, 'DDD') AS DIAS_PARA_NAVIDAD
FROM DUAL;

--SUBCONSULTAS
SELECT TO_CHAR(NAVIDAD, 'DDD') -  DIA_ACTUAL AS DIAS_PARA_NAVIDAD
FROM (
    SELECT TO_CHAR(sysdate, 'DDD') AS DIA_ACTUAL,
        TO_DATE('25-12-2023', 'DD-MM-YYYY') AS NAVIDAD
    FROM DUAL
);



--25 DIC


-- SECUENCIAS

CREATE SEQUENCE seq_employees
START WITH 207;

SELECT *
FROM EMPLOYEES
ORDER BY EMPLOYEE_ID DESC;
--WHERE EMPLOYEE_ID = 999;

ROLLBACK;

SELECT SEQ_EMPLOYEES.nextval AS NEXT_EMPLOYEE_ID
FROM DUAL;


SELECT SEQ_EMPLOYEES.CURRVAL AS NEXT_EMPLOYEE_ID
FROM DUAL;

--OTRAS ALTERNATIVAS PARA GENERAR CAMPOS INCREMENTALES EN ORACLE, QUE NO SEA SECUENCIAS
CREATE TABLE MY_TABLE (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    NAME VARCHAR2(50)
);

INSERT INTO MY_TABLE (NAME) VALUES ('John Doe');

SELECT * FROM MY_TABLE;



SELECT *
FROM EMPLOYEES; --110

SELECT *
FROM DEPARTMENTS; --27

SELECT 110*27 FROM DUAL;

SELECT *
FROM    EMPLOYEES, 
        DEPARTMENTS;


-- JOIN/NATURAL JOIN/INNER JOIN
SELECT *
FROM    EMPLOYEES, 
        DEPARTMENTS
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT *
FROM EMPLOYEES A 
INNER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID;

SELECT *
FROM EMPLOYEES A 
LEFT JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE B.DEPARTMENT_ID IS NULL;


SELECT *
FROM EMPLOYEES A 
RIGHT JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE A.DEPARTMENT_ID IS NULL;


SELECT *
FROM EMPLOYEES A 
FULL OUTER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID;

SELECT *
FROM EMPLOYEES A 
FULL OUTER JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
WHERE A.DEPARTMENT_ID IS NULL OR B.DEPARTMENT_ID IS NULL;


SELECT *
FROM EMPLOYEES;

SELECT A.EMPLOYEE_ID, A.FIRST_NAME, A.LAST_NAME, A.MANAGER_ID,
        B.FIRST_NAME AS MANAGER_FIRST_NAME,
        B.LAST_NAME AS MANAGER_LAST_NAME,
        B.MANAGER_ID AS MANAGER_ID,
        C.FIRST_NAME AS GRAND_MANAGER_FIRST_NAME,
        C.LAST_NAME AS GRAND_MANAGER_LAST_NAME
FROM EMPLOYEES A
LEFT JOIN EMPLOYEES B 
ON (A.MANAGER_ID = B.EMPLOYEE_ID)
LEFT JOIN EMPLOYEES C
ON (B.MANAGER_ID = C.EMPLOYEE_ID);


SELECT A.EMPLOYEE_ID, 
       A.FIRST_NAME || ' ' || A.LAST_NAME AS EMPLOYEE_NAME, 
       A.SALARY, A.DEPARTMENT_ID,
       B.DEPARTMENT_NAME, A.JOB_ID,
       C.JOB_TITLE,
       D.FIRST_NAME || ' ' || D.LAST_NAME  AS MANAGER_NAME,
       E.FIRST_NAME || ' ' || E.LAST_NAME  AS DEPARTMENT_MANAGER_NAME,
       F.STREET_ADDRESS,
       F.CITY,
       F.COUNTRY_ID,
       G.COUNTRY_NAME,
       G.REGION_ID,
       H.REGION_NAME
    --    I.JOB_ID AS JOB_HISTORY_JOB_ID
FROM EMPLOYEES A
LEFT JOIN DEPARTMENTS B
ON A.DEPARTMENT_ID = B.DEPARTMENT_ID
INNER JOIN JOBS C
ON A.JOB_ID = C.JOB_ID
LEFT JOIN EMPLOYEES D
ON A.MANAGER_ID = D.EMPLOYEE_ID
LEFT JOIN EMPLOYEES E
ON B.MANAGER_ID = E.EMPLOYEE_ID
LEFT JOIN LOCATIONS F
ON B.LOCATION_ID = F.LOCATION_ID
LEFT JOIN COUNTRIES G 
ON F.COUNTRY_ID = G.COUNTRY_ID
LEFT JOIN REGIONS H
ON G.REGION_ID = H.REGION_ID;
-- LEFT JOIN JOB_HISTORY I 
-- ON A.EMPLOYEE_ID = I.EMPLOYEE_ID;


SELECT *
FROM JOB_HISTORY
ORDER BY EMPLOYEE_ID, START_DATE;

SELECT *
FROM EMPLOYEES
WHERE EMPLOYEE_ID = 101;

SELECT *
FROM JOBS
WHERE JOB_ID = 'AD_VP';

SELECT *
FROM LOCATIONS;






SELECT *
FROM EMPLOYEES A;

SELECT *
FROM DEPARTMENTS B;


-- INNER JOIN
SELECT *
FROM    EMPLOYEES A, 
        DEPARTMENTS B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID;

-- LEFT JOIN
SELECT *
FROM    EMPLOYEES A, 
        DEPARTMENTS B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID(+);

-- RIGHT JOIN
SELECT *
FROM    EMPLOYEES A, 
        DEPARTMENTS B
WHERE A.DEPARTMENT_ID(+) = B.DEPARTMENT_ID;

-- FULL OUTER JOIN
SELECT *
FROM    EMPLOYEES A, 
        DEPARTMENTS B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID(+)
UNION
SELECT *
FROM    EMPLOYEES A, 
        DEPARTMENTS B
WHERE A.DEPARTMENT_ID(+) = B.DEPARTMENT_ID;






SELECT A.EMPLOYEE_ID, 
       A.FIRST_NAME || ' ' || A.LAST_NAME AS EMPLOYEE_NAME, 
       A.SALARY, A.DEPARTMENT_ID,
       B.DEPARTMENT_NAME, A.JOB_ID,
       C.JOB_TITLE,
       D.FIRST_NAME || ' ' || D.LAST_NAME  AS MANAGER_NAME,
       E.FIRST_NAME || ' ' || E.LAST_NAME  AS DEPARTMENT_MANAGER_NAME,
       F.STREET_ADDRESS,
       F.CITY,
       F.COUNTRY_ID,
       G.COUNTRY_NAME,
       G.REGION_ID,
       H.REGION_NAME
    --    I.JOB_ID AS JOB_HISTORY_JOB_ID
FROM    EMPLOYEES A, 
        DEPARTMENTS B,
        JOBS C,
        EMPLOYEES D,
        EMPLOYEES E,
        LOCATIONS F,
        COUNTRIES G,
        REGIONS H
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID (+) -- LEFT JOIN
AND A.JOB_ID = C.JOB_ID -- INNER JOIN
AND A.MANAGER_ID = D.EMPLOYEE_ID (+) -- LEFT JOIN
AND B.MANAGER_ID = E.EMPLOYEE_ID (+) -- LEFT JOIN
AND B.LOCATION_ID = F.LOCATION_ID (+) -- LEFT JOIN
AND F.COUNTRY_ID = G.COUNTRY_ID (+) -- LEFT JOIN
AND G.REGION_ID = H.REGION_ID (+);  -- LEFT JOIN
